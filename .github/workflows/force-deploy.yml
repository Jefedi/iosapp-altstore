name: üîÑ Force Deploy v1.0.5

on:
  workflow_dispatch:

jobs:
  force-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4

    - name: üìñ Check Version
      run: |
        VERSION=$(cat config.json | jq -r '.app.version')
        echo "Current version in config.json: $VERSION"
        
        # Check if tag exists
        if git tag -l "v$VERSION" | grep -q "v$VERSION"; then
          echo "‚ö†Ô∏è Tag v$VERSION already exists, will skip release creation"
          echo "SKIP_RELEASE=true" >> $GITHUB_ENV
        else
          echo "‚úÖ Version v$VERSION is new, proceeding with deployment"
          echo "SKIP_RELEASE=false" >> $GITHUB_ENV
        fi

    - name: üöÄ Trigger Main Workflow
      if: env.SKIP_RELEASE == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          const VERSION = JSON.parse(require('fs').readFileSync('config.json', 'utf8')).app.version;
          
          github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'auto-release.yml',
            ref: 'main',
            inputs: {
              force_build: 'true'
            }
          });
          
          console.log(`üöÄ Triggered auto-release workflow for version ${VERSION}`);

    - name: ‚ÑπÔ∏è Already Released
      if: env.SKIP_RELEASE == 'true'
      run: |
        VERSION=$(cat config.json | jq -r '.app.version')
        echo "‚ÑπÔ∏è Version $VERSION already exists as a release."
        echo "If you want to rebuild, delete the tag first or change the version number."